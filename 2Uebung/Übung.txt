Nr 1

1) dd if=/dev/urandom of=testfile bs=1M count=1
2) ln testfile testlink
3) tar cf archive.tar testfile testlink
4) tar czf archive.tar.gz testfile testlink
5) tar cjf archive.tar.bz2 testfile testlink
6) zip archive.zip testfile testlink

7) Warum ist die Datei größer:
        Die Archives sind ca. doppelt so groß weil testfile und testlink denselben inhalt  speichern aber als seperate Einträge archiviert sind.
        
8) dd if=/dev/zero of=testfile0 bs=1M count=1
Ergebnis: Die Datei ist viel kleiner, z.B. nur wenige Kilobyte. Warum?

    Kompression funktioniert besonders gut bei sich wiederholenden Daten wie Nullen.

    Zufallsdaten aus /dev/urandom lassen sich kaum komprimieren, daher bleibt die Archivgröße fast gleich zur Originalgröße.

9) Sicherheitsrelevanz – ZIP-Bomben

    Eine ZIP-Bombe ist eine bösartige Archivdatei, die beim Entpacken gigantisch viel Speicherplatz beansprucht, obwohl sie selbst sehr klein ist.

    Typisches Beispiel: eine Datei voller Nullen, mehrfach geschachtelt in ZIPs – z.B. eine 42-KB-ZIP-Datei, die beim Entpacken 4.5 Petabyte erzeugt.

    Relevanz:

        Kann Virenscanner, Firewalls oder Archivierungssoftware lahmlegen.

        Abwehrmaßnahmen: Begrenzung des Entpackvolumens, rekursive Tiefe, oder Erkennung sich wiederholender Muster.



Aufgabe 2 (Systemcalls)
rm = rm removes each specified file.  By default, it does not remove directories.
mv = Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY.
chmod = chmod changes the file mode
       bits  of each given file according to mode, which can be either a symbolic repre‐
       sentation of changes to make, or an octal number representing the bit pattern for
       the new mode bits.
chown = chown changes the user
       and/or group ownership of each given file.
mkdir

